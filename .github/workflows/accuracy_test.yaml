#
# Copyright (c) 2025 Huawei Technologies Co., Ltd. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# This file is a part of the vllm-ascend project.
#

name: Benchmarks / accuracy

on:
  pull_request:
    types: [ labeled ]
  workflow_dispatch:
    inputs:
      vllm-version:
        description: 'vllm version:'
        required: true
        type: choice
        options:
          - main
          - v0.9.0.1
          - v0.9.0
          - v0.7.3
      vllm-ascend-version:
        description: 'vllm-ascend version:'
        required: true
        type: choice
        options:
          - main
          - v0.7.3-dev
      models:
        description: 'model:'
        required: true
        type: choice
        options:
          - all
          - Qwen/Qwen2.5-7B-Instruct
          - Qwen/Qwen2.5-VL-7B-Instruct
        default: 'all'

# Bash shells do not use ~/.profile or ~/.bashrc so these shells need to be explicitly
# declared as "shell: bash -el {0}" on steps that need to be properly activated.
# It's used to activate ascend-toolkit environment variables.
defaults:
  run:
    shell: bash -el {0}

jobs:
  model_tests:
    # test will be triggered when tag '*-accuracy-test' & 'ready-for-test' or schedule job
    if:  >-
      ${{
      (contains(github.event.pull_request.labels.*.name, 'vl-accuracy-test') ||
      contains(github.event.pull_request.labels.*.name, 'dense-accuracy-test')) &&
      contains(github.event.pull_request.labels.*.name, 'ready-for-test') ||
      github.event_name == 'workflow_dispatch'
      }}
    name: Model Test - ${{ matrix.model_name }}
    runs-on: 'linux-arm64-npu-2'
    strategy:
      matrix:
        # the accuracy test will run:
        # 1. workflow_dispatch with models input
        #   - all: Qwen/Qwen2.5-7B-Instruct, Qwen/Qwen2.5-VL-7B-Instruct, Qwen/Qwen3-8B-Base
        #   - specified but not all: Qwen/Qwen2.5-7B-Instruct, Qwen/Qwen2.5-VL-7B-Instruct, Qwen/Qwen3-8B-Base
        # 2. PR labeled with "*-accuracy-test"
        #   - dense-accuracy-test: Qwen/Qwen2.5-7B-Instruct
        #   - vl-accuracy-test: Qwen/Qwen2.5-VL-7B-Instruct
        include: ${{ fromJSON(
          (github.event.inputs.models == 'all' && '[{"model_name":"Qwen/Qwen2.5-7B-Instruct"},{"model_name":"meta-llama/Llama-3.1-8B-Instruct"},{"model_name":"Qwen/Qwen2.5-VL-7B-Instruct"}, {"model_name":"Qwen/Qwen3-8B-Base"}]') ||
          (github.event.inputs.models == 'Qwen/Qwen2.5-7B-Instruct' && '[{"model_name":"Qwen/Qwen2.5-7B-Instruct"}]') ||
          (github.event.inputs.models == 'Qwen/Qwen2.5-VL-7B-Instruct' && '[{"model_name":"Qwen/Qwen2.5-VL-7B-Instruct"}]') ||
          contains(github.event.pull_request.labels.*.name, 'dense-accuracy-test') && '[{"model_name":"Qwen/Qwen2.5-7B-Instruct"}]' ||
          contains(github.event.pull_request.labels.*.name, 'vl-accuracy-test') && '[{"model_name":"Qwen/Qwen2.5-VL-7B-Instruct"}]'
         ) }}
      fail-fast: false

    container:
      image: m.daocloud.io/quay.io/ascend/cann:8.1.rc1-910b-ubuntu22.04-py3.10
      env:
        HF_ENDPOINT: https://hf-mirror.com
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
        DATASET_SOURCE: ModelScope
        VLLM_USE_MODELSCOPE: True

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check npu and CANN info
        run: |
          npu-smi info
          cat /usr/local/Ascend/ascend-toolkit/latest/"$(uname -i)"-linux/ascend_toolkit_install.info

      - name: Config mirrors
        run: |
          sed -i 's|ports.ubuntu.com|mirrors.tuna.tsinghua.edu.cn|g' /etc/apt/sources.list
          pip config set global.index-url https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple
          apt-get update -y
          apt install git -y
          git config --global url."https://gh-proxy.test.osinfra.cn/https://github.com/".insteadOf https://github.com/

      - name: Install system dependencies
        run: |
          apt-get -y install `cat packages.txt`
          apt-get -y install gcc g++ cmake libnuma-dev

      - name: Checkout vllm-project/vllm repo
        uses: actions/checkout@v4
        with:
          repository: vllm-project/vllm
          path: ./vllm-empty
          # Please also change this when bump matched version
          ref: ${{ github.event.inputs.vllm-version  || 'v0.9.0' }}

      - name: Install vllm-project/vllm from source
        working-directory: ./vllm-empty
        run: VLLM_TARGET_DEVICE=empty pip install -e .

      - name: Checkout vllm-project/vllm-ascend repo
        uses: actions/checkout@v4
        with:
          repository: vllm-project/vllm-ascend
          path: ./vllm-ascend
          # 1. If version specified (work_dispatch), do specified branch test
          # 2. If no version (labeled PR), do PR accuracy test
          ref: ${{ github.event.inputs.vllm-ascend-version }}
          fetch-depth: 0

      - name: Install vllm-project/vllm-ascend
        working-directory: ./vllm-ascend
        run: |
          pip install -r requirements-dev.txt
          pip install -e .
          
      - name: Install lm-eval, ray, and datasets
        run: |
            pip install lm-eval ray datasets==2.16.0
          
      - name: Collect version info
        run: |
          for dir in /usr/local/Ascend/ascend-toolkit/*; do
            dname=$(basename "$dir")
            if [ "$dname" != "latest" ]; then
              TOOLKIT_DIR="$dname"
              break
            fi
          done
          INFO_FILE="/usr/local/Ascend/ascend-toolkit/${TOOLKIT_DIR}/$(uname -i)-linux/ascend_toolkit_install.info"
          CANN_VERSION=$(grep "version=" "$INFO_FILE" \
                           | head -n1 \
                           | cut -d'=' -f2 \
                           | tr -d '"')
          {
            echo "CANN_VERSION=$CANN_VERSION"
            pip show torch | grep "Version:" | awk '{print "TORCH_VERSION="$2}'
            pip show torch_npu | grep "Version:" | awk '{print "TORCH_NPU_VERSION="$2}'
            pip show vllm | grep "Version:" | awk '{print "VLLM_VERSION="$2}' | sed 's/+.*//'
          } >> "$GITHUB_ENV"
      
      - name: Print versions
        run: |
          echo "CANN: ${{ env.CANN_VERSION }}"
          echo "Torch NPU: ${{ env.TORCH_NPU_VERSION }}"
          echo "Torch: ${{ env.TORCH_VERSION }}"
          echo "vLLM: ${{ env.VLLM_VERSION }}"

      - name: Run Accuracy Test for V0
        id: report
        working-directory: ./benchmarks
        env:
          VLLM_USE_V1: 0
          PYTORCH_NPU_ALLOC_CONF: max_split_size_mb:256
        run: |
          model_base_name=$(basename ${{ matrix.model_name }})
          echo "model_base_name=$model_base_name"
          echo "model_base_name=$model_base_name" >> $GITHUB_OUTPUT
          mkdir -p ./accuracy/V0
          echo "test111" > ./accuracy/V0/${model_base_name}.md
          python ./scripts/run_accuracy.py \
            --model "${{ matrix.model_name }}" \
            --output "./accuracy/V0/${model_base_name}.md" \
            --vllm_ascend_version "${{ github.event.inputs.vllm-ascend-version || 'current' }}" \
            --cann_version "${{ env.CANN_VERSION }}" \
            --torch_npu_version "${{ env.TORCH_NPU_VERSION }}" \
            --torch_version "${{ env.TORCH_VERSION }}" \
            --vllm_version "${{ env.VLLM_VERSION }}"
          cat ./accuracy/V0/${model_base_name}.md

      - name: Upload Report for V0
        uses: actions/upload-artifact@v4
        with:
          name: "${{ github.event.inputs.vllm-ascend-version }}-${{ steps.report.outputs.model_base_name }}-V0-report"
          path: ./benchmarks/accuracy/V0/${{ steps.report.outputs.model_base_name }}.md
          if-no-files-found: warn
          retention-days: 90
          overwrite: true
